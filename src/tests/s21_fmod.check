#include <check.h>
#include <math.h>

#include "s21_math.h"

#test s21_fmod_test

for (double i = 0; i <= 10000; i += 0.1) {
  ck_assert_double_eq_tol(fmod(i, 1), s21_fmod(i, 1), 1e-06);
  ck_assert_double_eq_tol(fmod(-i, 1), s21_fmod(-i, 1), 1e-06);
  ck_assert_double_eq_tol(fmod(i, s21_PI), s21_fmod(i, s21_PI),
                          1e-06);
  ck_assert_double_eq_tol(fmod(-i, s21_PI), s21_fmod(-i, s21_PI),
                          1e-06);
  ck_assert_double_eq_tol(fmod(i, -1), s21_fmod(i, -1), 1e-06);
  ck_assert_double_eq_tol(fmod(-i, -1), s21_fmod(-i, -1), 1e-06);
  ck_assert_double_eq_tol(fmod(i, -s21_PI), s21_fmod(i, -s21_PI),
                          1e-06);
  ck_assert_double_eq_tol(fmod(-i, -s21_PI), s21_fmod(-i, -s21_PI),
                          1e-06);
} 
ck_assert_ldouble_nan(s21_fmod(NAN, 1));
ck_assert_double_nan(s21_fmod(INFINITY, 1));
ck_assert_double_nan(s21_fmod(2, 0));
ck_assert_int_eq(s21_fmod(3, INFINITY), 3);
ck_assert_double_nan(s21_fmod(-INFINITY, 1));